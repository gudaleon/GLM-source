diff -NaBur -x .git fabm-git-20140610/compilers/vs2008/fabm-glm.vfproj fabm-git/compilers/vs2008/fabm-glm.vfproj
--- fabm-git-20140610/compilers/vs2008/fabm-glm.vfproj	2014-06-10 14:09:46.000000000 +0800
+++ fabm-git/compilers/vs2008/fabm-glm.vfproj	2014-06-10 17:49:49.755137769 +0800
@@ -78,6 +78,10 @@
 		<File RelativePath="..\..\src\Makefile"/>
 		<File RelativePath="..\..\src\Rules.make"/></Filter>
 		<Filter Name="Source Files" Filter="f90;for;f;fpp;ftn;def;odl;idl">
+		<Filter Name="config">
+		<File RelativePath="..\..\src\config\fabm_config.F90"/>
+		<File RelativePath="..\..\src\config\fabm_config_types.F90"/>
+		<File RelativePath="..\..\src\config\fabm_yaml.F90"/></Filter>
 		<Filter Name="models">
 		<Filter Name="aed">
 		<File RelativePath="..\..\src\models\aed\aed.h"/>
@@ -136,6 +140,8 @@
 		<Filter Name="iow">
 		<Filter Name="age">
 		<File RelativePath="..\..\src\models\iow\age\iow_age.F90"/></Filter>
+		<Filter Name="ergom">
+		<File RelativePath="..\..\src\models\iow\ergom\ergom_cgt.F90"/></Filter>
 		<Filter Name="spm">
 		<File RelativePath="..\..\src\models\iow\spm\spm.F90"/></Filter></Filter>
 		<Filter Name="Klimacampus">
@@ -146,14 +152,18 @@
 		<Filter Name="msi">
 		<Filter Name="ergom1">
 		<File RelativePath="..\..\src\models\msi\ergom1\ergom1.F90"/></Filter></Filter>
+		<Filter Name="niva">
+		<Filter Name="oxydep">
+		<File RelativePath="..\..\src\models\niva\oxydep\oxydep.F90"/></Filter>
+		<File RelativePath="..\..\src\models\niva\niva_model_library.F90"/></Filter>
 		<Filter Name="pml">
-		<Filter Name="carbonate">
 		<File RelativePath="..\..\src\models\pml\carbonate\carbonate.F90"/>
-		<File RelativePath="..\..\src\models\pml\carbonate\co2_dyn.F90"/></Filter></Filter></Filter>
+		<File RelativePath="..\..\src\models\pml\carbonate\co2_dyn.F90"/></Filter></Filter>
 		<File RelativePath="..\..\src\fabm.F90"/>
 		<File RelativePath="..\..\src\fabm_driver.F90"/>
 		<File RelativePath="..\..\src\fabm_expressions.F90"/>
 		<File RelativePath="..\..\src\fabm_library.F90"/>
+		<File RelativePath="..\..\src\fabm_particle.F90"/>
 		<File RelativePath="..\..\src\fabm_properties.F90"/>
 		<File RelativePath="..\..\src\fabm_standard_variables.F90"/>
 		<File RelativePath="..\..\src\fabm_types.F90"/></Filter></Files>
diff -NaBur -x .git fabm-git-20140610/compilers/vs2010/fabm-glm.vfproj fabm-git/compilers/vs2010/fabm-glm.vfproj
--- fabm-git-20140610/compilers/vs2010/fabm-glm.vfproj	2014-06-10 14:09:46.000000000 +0800
+++ fabm-git/compilers/vs2010/fabm-glm.vfproj	2014-06-10 17:46:59.896242565 +0800
@@ -78,6 +78,10 @@
 		<File RelativePath="..\..\src\Makefile"/>
 		<File RelativePath="..\..\src\Rules.make"/></Filter>
 		<Filter Name="Source Files" Filter="f90;for;f;fpp;ftn;def;odl;idl">
+		<Filter Name="config">
+		<File RelativePath="..\..\src\config\fabm_config.F90"/>
+		<File RelativePath="..\..\src\config\fabm_config_types.F90"/>
+		<File RelativePath="..\..\src\config\fabm_yaml.F90"/></Filter>
 		<Filter Name="models">
 		<Filter Name="aed">
 		<File RelativePath="..\..\src\models\aed\aed_carbon.F90"/>
@@ -134,7 +138,9 @@
 		<File RelativePath="..\..\src\models\hzg\omexdia_p\omexdia_p.F90"/></Filter></Filter>
 		<Filter Name="iow">
 		<Filter Name="age">
-		<File RelativePath="..\..\src\models\iow\age\age.F90"/></Filter>
+		<File RelativePath="..\..\src\models\iow\age\iow_age.F90"/></Filter>
+		<Filter Name="ergom">
+		<File RelativePath="..\..\src\models\iow\ergom\ergom_cgt.F90"/></Filter>
 		<Filter Name="spm">
 		<File RelativePath="..\..\src\models\iow\spm\spm.F90"/></Filter></Filter>
 		<Filter Name="klimacampus">
@@ -146,14 +152,18 @@
 		<Filter Name="msi">
 		<Filter Name="ergom1">
 		<File RelativePath="..\..\src\models\msi\ergom1\ergom1.F90"/></Filter></Filter>
+		<Filter Name="niva">
+		<Filter Name="oxydep">
+		<File RelativePath="..\..\src\models\niva\oxydep\oxydep.F90"/></Filter>
+		<File RelativePath="..\..\src\models\niva\niva_model_library.F90"/></Filter>
 		<Filter Name="pml">
-		<Filter Name="carbonate">
 		<File RelativePath="..\..\src\models\pml\carbonate\carbonate.F90"/>
-		<File RelativePath="..\..\src\models\pml\carbonate\co2_dyn.F90"/></Filter></Filter></Filter>
+		<File RelativePath="..\..\src\models\pml\carbonate\co2_dyn.F90"/></Filter></Filter>
 		<File RelativePath="..\..\src\fabm.F90"/>
 		<File RelativePath="..\..\src\fabm_driver.F90"/>
 		<File RelativePath="..\..\src\fabm_expressions.F90"/>
 		<File RelativePath="..\..\src\fabm_library.F90"/>
+		<File RelativePath="..\..\src\fabm_particle.F90"/>
 		<File RelativePath="..\..\src\fabm_properties.F90"/>
 		<File RelativePath="..\..\src\fabm_standard_variables.F90"/>
 		<File RelativePath="..\..\src\fabm_types.F90"/></Filter></Files>
diff -NaBur -x .git fabm-git-20140610/src/models/aed/aed_carbon.F90 fabm-git/src/models/aed/aed_carbon.F90
--- fabm-git-20140610/src/models/aed/aed_carbon.F90	2014-08-10 11:53:15.072257673 +0800
+++ fabm-git/src/models/aed/aed_carbon.F90	2014-08-09 19:41:46.609462887 +0800
@@ -58,6 +58,7 @@
         PROCEDURE :: do_ppdd                  => aed_carbon_do_ppdd
         PROCEDURE :: do_benthos               => aed_carbon_do_benthos
         PROCEDURE :: get_surface_exchange     => aed_carbon_get_surface_exchange
+!       PROCEDURE :: check_state              => aed_carbon_check_state
    END TYPE
 
 
@@ -97,7 +98,8 @@
    AED_REAL          :: Rch4ox = 0.01
    AED_REAL          :: Kch4ox = 0.01
    AED_REAL          :: vTch4ox= 1.05
-   AED_REAL          :: atmco2 = 367e-6
+!  AED_REAL          :: atmco2 = 367e-6
+   AED_REAL          :: atmco2 = 367.
    CHARACTER(len=64) :: methane_reactant_variable=''
 
 
@@ -320,11 +322,16 @@
    ! FCO2 = kCO2 * Ko * (pCO2 - PCO2a)
    ! pCO2a = 367e-6 (Keeling & Wharf, 1999)
 
+   !------ Yanti correction (20/5/2013) ----------------------------------------
+   ! pCO2 is actually in uatm (=ppm)
    ! mmol/m2/s = m/s * mmol/L/atm * atm
-   FCO2 = kCO2 * Ko*1e6 * (pCO2 - self%atmco2)
+   FCO2 = kCO2 * Ko * (pCO2 - self%atmco2)
+
+   ! FCO2 = - kCO2 * Ko*1e6 * ((pCO2 * 1e-6) - self%atmco2) ! dCO2/dt
+   !----------------------------------------------------------------------------
 
    ! Transfer surface exchange value to FABM (mmmol/m2) converted by driver.
-   _SET_SURFACE_EXCHANGE_(self%id_dic,FCO2)
+   _SET_SURFACE_EXCHANGE_(self%id_dic,-FCO2)
 
    ! Also store oxygen flux across the atm/water interface as diagnostic variable (mmmol/m2).
    _SET_HORIZONTAL_DIAGNOSTIC_(self%id_atm_co2_exch,FCO2)
@@ -411,6 +418,39 @@
 
 
 !###############################################################################
+SUBROUTINE aed_carbon_check_state(self,_ARGUMENTS_CHECK_STATE_)
+!-------------------------------------------------------------------------------
+! Update pH after kinetic transformations are applied
+!-------------------------------------------------------------------------------
+!ARGUMENTS
+   CLASS (aed_type_carbon),INTENT(in) :: self
+   _DECLARE_ARGUMENTS_CHECK_STATE_
+!
+!LOCALS
+   ! State
+   AED_REAL :: dic, pH
+
+!-------------------------------------------------------------------------------
+!BEGIN
+   IF(.NOT.self%simDIC) RETURN
+
+   ! Enter spatial loops (if any)
+   _LOOP_BEGIN_
+
+    ! Retrieve current (local) state variable values.
+!  _GET_(self%id_dic,dic) ! Concentration of carbon in surface layer
+!  _GET_(self%id_pH, pH) ! Concentration of carbon in surface layer
+
+!print*,"new pH = ",pH
+!  _SET_STATE_(self%id_pH, pH)
+
+   ! Leave spatial loops (if any)
+   _LOOP_END_
+END SUBROUTINE aed_carbon_check_state
+!+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+
+
+!###############################################################################
 PURE AED_REAL FUNCTION aed_carbon_fch4ox(use_oxy,Rch4ox,Kch4ox,vTch4ox,oxy,temp)
 !-------------------------------------------------------------------------------
 ! Michaelis-Menten formulation for methane oxidation
@@ -435,12 +475,12 @@
 
 
 !###############################################################################
-PURE AED_REAL FUNCTION aed_carbon_co2(ionic,temp,dic,pH)
+PURE AED_REAL FUNCTION aed_carbon_co2(ionic, temp, dic, pH)
 !-------------------------------------------------------------------------------
 ! CO2 concentration of DIC at fixed T
 !-------------------------------------------------------------------------------
 !ARGUMENTS
-   AED_REAL, INTENT(IN)                 :: ionic, dic, temp, pH
+   AED_REAL, INTENT(IN) :: ionic, dic, temp, pH
 !
 !LOCALS
    ! Temporary variables
diff -NaBur -x .git fabm-git-20140610/src/models/aed/aed_organic_matter.F90 fabm-git/src/models/aed/aed_organic_matter.F90
--- fabm-git-20140610/src/models/aed/aed_organic_matter.F90	2014-08-10 11:53:15.076257744 +0800
+++ fabm-git/src/models/aed/aed_organic_matter.F90	2014-08-09 19:41:46.617463023 +0800
@@ -35,14 +35,14 @@
 !
    TYPE,extends(type_base_model) :: aed_type_organic_matter
 !     Variable identifiers
-      TYPE (type_state_variable_id)      :: id_pon,id_don !particulate and dissolved organic nitrogen
-      TYPE (type_state_variable_id)      :: id_pop,id_dop !particulate and dissolved organic phosphorus
-      TYPE (type_state_variable_id)      :: id_poc,id_doc !particulate and dissolved organic carbon
+      TYPE (type_state_variable_id)      :: id_pon,id_don ! particulate and dissolved organic nitrogen
+      TYPE (type_state_variable_id)      :: id_pop,id_dop ! particulate and dissolved organic phosphorus
+      TYPE (type_state_variable_id)      :: id_poc,id_doc ! particulate and dissolved organic carbon
       TYPE (type_state_variable_id)      :: id_oxy,id_amm,id_frp,id_dic
-      TYPE (type_horizontal_dependency_id)      :: id_Fsed_pon,id_Fsed_don !sed. rate organic nitrogen
-      TYPE (type_horizontal_dependency_id)      :: id_Fsed_pop,id_Fsed_dop !sed. rate organic phosphorus
-      TYPE (type_horizontal_dependency_id)      :: id_Fsed_poc,id_Fsed_doc !sed. rate organic carbon
-      TYPE (type_horizontal_dependency_id)      :: id_Psed_poc, id_Psed_pon, id_Psed_pop !sedimentation rates
+      TYPE (type_horizontal_dependency_id)      :: id_Fsed_pon, id_Fsed_don ! sed. rate organic nitrogen
+      TYPE (type_horizontal_dependency_id)      :: id_Fsed_pop, id_Fsed_dop ! sed. rate organic phosphorus
+      TYPE (type_horizontal_dependency_id)      :: id_Fsed_poc, id_Fsed_doc ! sed. rate organic carbon
+      TYPE (type_horizontal_dependency_id)      :: id_Psed_poc, id_Psed_pon, id_Psed_pop ! sedimentation rates
       TYPE (type_dependency_id)          :: id_temp
       TYPE (type_diagnostic_variable_id) :: id_pon_miner, id_don_miner
       TYPE (type_diagnostic_variable_id) :: id_pop_miner, id_dop_miner
@@ -52,7 +52,7 @@
       TYPE (type_horizontal_diagnostic_variable_id) :: id_sed_poc, id_sed_doc
       TYPE (type_diagnostic_variable_id) :: id_bod
 
-!     Model parameters
+      !# Model parameters
       AED_REAL :: w_pon,Rpon_miner,Rdon_miner,Fsed_pon,Fsed_don, &
                           Kpon_miner, Kdon_miner, Ksed_don, &
                           theta_pon_miner, theta_don_miner, theta_sed_don
@@ -147,10 +147,9 @@
    CHARACTER(len=64)         :: Fsed_poc_variable=''
    CHARACTER(len=64)         :: Fsed_doc_variable=''
 
-   CHARACTER(len=64)         :: Psed_poc_variable=''
-   CHARACTER(len=64)         :: Psed_pon_variable=''
-   CHARACTER(len=64)         :: Psed_pop_variable=''
-
+!  CHARACTER(len=64)         :: Psed_poc_variable=''
+!  CHARACTER(len=64)         :: Psed_pon_variable=''
+!  CHARACTER(len=64)         :: Psed_pop_variable=''
 
 
    AED_REAL,PARAMETER :: secs_pr_day = 86400.
@@ -169,8 +168,8 @@
              Kpoc_miner, Kdoc_miner, Ksed_doc,                &
              theta_poc_miner, theta_doc_miner, theta_sed_doc, KeDOM, KePOM, &
              doc_miner_reactant_variable, doc_miner_product_variable, &
-             Fsed_poc_variable, Fsed_doc_variable, &
-             Psed_poc_variable, Psed_pon_variable, Psed_pop_variable
+             Fsed_poc_variable, Fsed_doc_variable !, &
+!            Psed_poc_variable, Psed_pon_variable, Psed_pop_variable
 
 !-------------------------------------------------------------------------------
 !BEGIN
@@ -272,12 +271,12 @@
      CALL self%register_horizontal_dependency(self%id_Fsed_doc,Fsed_doc_variable)
    ENDIF
 
-   self%use_sedmtn_model = Psed_poc_variable .NE. ''
-   IF (self%use_sedmtn_model) THEN
-     CALL self%register_horizontal_dependency(self%id_Psed_poc,Psed_poc_variable)
-     CALL self%register_horizontal_dependency(self%id_Psed_pon,Psed_pon_variable)
-     CALL self%register_horizontal_dependency(self%id_Psed_pop,Psed_pop_variable)
-   ENDIF
+!  self%use_sedmtn_model = Psed_poc_variable .NE. ''
+!  IF (self%use_sedmtn_model) THEN
+!    CALL self%register_horizontal_dependency(self%id_Psed_poc,Psed_poc_variable)
+!    CALL self%register_horizontal_dependency(self%id_Psed_pon,Psed_pon_variable)
+!    CALL self%register_horizontal_dependency(self%id_Psed_pop,Psed_pop_variable)
+!  ENDIF
 
    ! Register diagnostic variables
    CALL self%register_diagnostic_variable(self%id_pon_miner,'pon_miner','mmol/m**3/d',  'PON mineralisation')
@@ -567,7 +566,7 @@
    ! Retrieve current environmental conditions for the bottom pelagic layer.
    _GET_(self%id_temp,temp)  ! local temperature
 
-    ! Retrieve current (local) state variable values.
+   ! Retrieve current (local) state variable values.
    _GET_(self%id_pon,pon) ! particulate organic matter
    _GET_(self%id_don,don) ! particulate organic matter
    _GET_(self%id_pop,pop) ! particulate organic matter
@@ -619,13 +618,12 @@
    _SET_BOTTOM_EXCHANGE_(self%id_doc,doc_flux)
 
 
-  ! Set sedimentation flux (mmmol/m2) as calculated by organic matter.
-   IF (self%use_sedmtn_model) THEN
-      _SET_STATE_BEN_(self%id_Psed_poc,Psed_poc)
-      _SET_STATE_BEN_(self%id_Psed_pon,Psed_pon)
-      _SET_STATE_BEN_(self%id_Psed_pop,Psed_pop)
-   ENDIF
-
+   ! Set sedimentation flux (mmmol/m2) as calculated by organic matter.
+!  IF (self%use_sedmtn_model) THEN
+!     _SET_STATE_BEN_(self%id_Psed_poc,Psed_poc)
+!     _SET_STATE_BEN_(self%id_Psed_pon,Psed_pon)
+!     _SET_STATE_BEN_(self%id_Psed_pop,Psed_pop)
+!  ENDIF
 
    ! Set sink and source terms for the benthos (change per surface area per second)
    ! Note that this must include the fluxes to and from the pelagic.
diff -NaBur -x .git fabm-git-20140610/src/models/aed/aed_phosphorus.F90 fabm-git/src/models/aed/aed_phosphorus.F90
--- fabm-git-20140610/src/models/aed/aed_phosphorus.F90	2014-08-10 11:53:15.080257812 +0800
+++ fabm-git/src/models/aed/aed_phosphorus.F90	2014-08-09 19:41:46.621463091 +0800
@@ -49,9 +49,8 @@
 
       CONTAINS     ! Model Procedures
         PROCEDURE :: initialize               => aed_init_phosphorus
-        PROCEDURE :: do                       => aed_phosphorus_do
-        PROCEDURE :: do_ppdd                  => aed_phosphorus_do_ppdd
         PROCEDURE :: do_benthos               => aed_phosphorus_do_benthos
+        PROCEDURE :: check_state              => aed_phosphorus_check_state
    END TYPE
 
 
@@ -172,14 +171,14 @@
 
 
 !###############################################################################
-SUBROUTINE aed_phosphorus_do(self,_ARGUMENTS_DO_)
+SUBROUTINE aed_phosphorus_check_state(self,_ARGUMENTS_CHECK_STATE_)
 !-------------------------------------------------------------------------------
 ! Update partitioning of phosphate between dissolved and particulate pools
 ! after kinetic transformations are applied
 !-------------------------------------------------------------------------------
 !ARGUMENTS
    CLASS (aed_type_phosphorus),INTENT(in) :: self
-   _DECLARE_ARGUMENTS_DO_
+   _DECLARE_ARGUMENTS_CHECK_STATE_
 !
 !LOCALS
    ! Environment
@@ -209,8 +208,8 @@
     ! Retrieve current (local) state variable values.
    _GET_(self%id_frp,frp)         ! dissolved PO4
    _GET_(self%id_frpads,frpads)   ! adsorped PO4
-   IF(.NOT.self%ads_use_external_tss) THEN
-     _GET_(self%id_tssfabm,tss)       ! local total susp solids
+   IF (.NOT.self%ads_use_external_tss) THEN
+      _GET_(self%id_tssfabm,tss)       ! local total susp solids
    END IF
 
 
@@ -220,9 +219,9 @@
    f_pH     = one_
    SSconc   = tss
 
-     ! calculate the total possible PO4 for sorption, and solids
-     PO4tot  = MAX(one_e_neg_ten, frp + frpads)  ! Co in Chao (mg)
-     SSconc  = MAX(one_e_neg_ten, SSconc )       ! s in Chao  (mg = mol/L * g/mol * mg/g)
+   ! calculate the total possible PO4 for sorption, and solids
+   PO4tot  = MAX(one_e_neg_ten, frp + frpads)  ! Co in Chao (mg)
+   SSconc  = MAX(one_e_neg_ten, SSconc )       ! s in Chao  (mg = mol/L * g/mol * mg/g)
 
 
    IF(self%PO4AdsorptionModel == 1) THEN
@@ -230,11 +229,9 @@
      ! This is the model for PO4 sorption from Ji 2008:
      !
      ! Ji, Z-G. 2008. Hydrodynamics and Water Quality. Wiley Press.
-
+     !
      PO4par = (self%Kpo4p*SSconc) / (one_+self%Kpo4p*SSconc) * PO4tot
      PO4dis = one_ / (one_+self%Kpo4p*SSconc) * PO4tot
-
-
    ELSEIF(self%PO4AdsorptionModel == 2) THEN
      !-----------------------------------------------------
      ! This is the model for PO4 sorption from Chao et al. 2010:
@@ -242,8 +239,7 @@
      ! Chao, X. et al. 2010. Three-dimensional numerical simulation of
      !   water quality and sediment associated processes with application
      !   to a Mississippi delta lake. J. Environ. Manage. 91 p1456-1466.
-
-
+     !
      IF(self%ads_use_pH) THEN
        _GET_(self%id_pH,pH) ! pH
 
@@ -286,42 +282,7 @@
 
    ! Leave spatial loops (if any)
    _LOOP_END_
-END SUBROUTINE aed_phosphorus_do
-!+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-
-
-!###############################################################################
-SUBROUTINE aed_phosphorus_do_ppdd(self,_ARGUMENTS_DO_PPDD_)
-!-------------------------------------------------------------------------------
-! Right hand sides of phosphorus biogeochemical model exporting
-! production/destruction matrices
-!-------------------------------------------------------------------------------
-!ARGUMENTS
-   CLASS (aed_type_phosphorus),INTENT(in) :: self
-   _DECLARE_ARGUMENTS_DO_PPDD_
-!
-!LOCALS
-   AED_REAL           :: frp
-   AED_REAL           :: diff_frp
-   AED_REAL,PARAMETER :: secs_pr_day = 86400.
-
-!-------------------------------------------------------------------------------
-!BEGIN
-   ! Enter spatial loops (if any)
-   _LOOP_BEGIN_
-
-   ! Retrieve current (local) state variable values.
-   _GET_(self%id_frp,frp) ! phosphorus
-
-   ! Set temporal derivatives
-   diff_frp = 0.
-
-   _SET_PP_(self%id_frp,self%id_frp,diff_frp)
-
-   ! Leave spatial loops (if any)
-   _LOOP_END_
-
-END SUBROUTINE aed_phosphorus_do_ppdd
+END SUBROUTINE aed_phosphorus_check_state
 !+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 
 
diff -NaBur -x .git fabm-git-20140610/src/models/aed/aed_phytoplankton.F90 fabm-git/src/models/aed/aed_phytoplankton.F90
--- fabm-git-20140610/src/models/aed/aed_phytoplankton.F90	2014-08-10 11:53:15.088257949 +0800
+++ fabm-git/src/models/aed/aed_phytoplankton.F90	2014-08-09 19:41:46.625463161 +0800
@@ -246,12 +246,12 @@
        CALL self%register_diagnostic_variable(self%id_NtoP(i), TRIM(self%phytos(i)%p_name)//'_NtoP','mmol/m**3', 'INi/IPi')
 
        IF (extra_debug) THEN
-          CALL self%register_diagnostic_variable(self%id_fT(i), TRIM(self%phytos(i)%p_name)//'_fT','', 'fT')
-          CALL self%register_diagnostic_variable(self%id_fI(i), TRIM(self%phytos(i)%p_name)//'_fI','', 'fI')
-          CALL self%register_diagnostic_variable(self%id_fNit(i), TRIM(self%phytos(i)%p_name)//'_fNit','', 'fNit')
-          CALL self%register_diagnostic_variable(self%id_fPho(i), TRIM(self%phytos(i)%p_name)//'_fPho','', 'fPho')
-          CALL self%register_diagnostic_variable(self%id_fSil(i), TRIM(self%phytos(i)%p_name)//'_fSil','', 'fSil')
-          CALL self%register_diagnostic_variable(self%id_fSal(i), TRIM(self%phytos(i)%p_name)//'_fSal','', 'fSal')
+          CALL self%register_diagnostic_variable(self%id_fT(i), TRIM(self%phytos(i)%p_name)//'_fT','mmol/m**3', 'fT')
+          CALL self%register_diagnostic_variable(self%id_fI(i), TRIM(self%phytos(i)%p_name)//'_fI','mmol/m**3', 'fI')
+          CALL self%register_diagnostic_variable(self%id_fNit(i), TRIM(self%phytos(i)%p_name)//'_fNit','mmol/m**3', 'fNit')
+          CALL self%register_diagnostic_variable(self%id_fPho(i), TRIM(self%phytos(i)%p_name)//'_fPho','mmol/m**3', 'fPho')
+          CALL self%register_diagnostic_variable(self%id_fSil(i), TRIM(self%phytos(i)%p_name)//'_fSil','mmol/m**3', 'fSil')
+          CALL self%register_diagnostic_variable(self%id_fSal(i), TRIM(self%phytos(i)%p_name)//'_fSal','mmol/m**3', 'fSal')
        ENDIF
     ENDDO
 END SUBROUTINE aed_phytoplankton_load_params
@@ -440,26 +440,26 @@
    _DECLARE_ARGUMENTS_DO_
 !
 !LOCALS
-   AED_REAL           :: phy, tphy, tin, tip, tchla
-   AED_REAL           :: INi, IPi
-   AED_REAL           :: pup
-   AED_REAL           :: no3up,nh4up
-   AED_REAL           :: cup, rsiup
-   AED_REAL           :: temp,par,Io,salinity, extc,dz
-   AED_REAL           :: primprod(self%num_phytos), exudation(self%num_phytos), &
-                         a_nfix(self%num_phytos), respiration(self%num_phytos)
-   AED_REAL           :: cuptake(self%num_phytos), cexcretion(self%num_phytos), cmortality(self%num_phytos)
-   AED_REAL           :: nuptake(self%num_phytos,1:4), nexcretion(self%num_phytos), nmortality(self%num_phytos)
-   AED_REAL           :: puptake(self%num_phytos,1:2), pexcretion(self%num_phytos), pmortality(self%num_phytos)
-   AED_REAL           :: siuptake(self%num_phytos), siexcretion(self%num_phytos), simortality(self%num_phytos)
-   AED_REAL           :: fT, fNit, fPho, fSil, fI, fXl, fSal, PNf
-   AED_REAL           :: upTot
+   AED_REAL :: phy, tphy, tin, tip, tchla
+   AED_REAL :: INi, IPi
+   AED_REAL :: pup
+   AED_REAL :: no3up,nh4up
+   AED_REAL :: cup, rsiup
+   AED_REAL :: temp, par, Io, salinity, extc, dz
+   AED_REAL :: primprod(self%num_phytos), exudation(self%num_phytos), &
+               a_nfix(self%num_phytos), respiration(self%num_phytos)
+   AED_REAL :: cuptake(self%num_phytos), cexcretion(self%num_phytos), cmortality(self%num_phytos)
+   AED_REAL :: nuptake(self%num_phytos,1:4), nexcretion(self%num_phytos), nmortality(self%num_phytos)
+   AED_REAL :: puptake(self%num_phytos,1:2), pexcretion(self%num_phytos), pmortality(self%num_phytos)
+   AED_REAL :: siuptake(self%num_phytos), siexcretion(self%num_phytos), simortality(self%num_phytos)
+   AED_REAL :: fT, fNit, fPho, fSil, fI, fXl, fSal, PNf
+   AED_REAL :: upTot
 
-   INTEGER            :: phy_i,c
-   AED_REAL           :: flux, available
+   INTEGER  :: phy_i,c
+   AED_REAL :: flux, available
 
 ! MH to fix
-!  AED_REAL           :: dt = 3600. ! just for now, hard code it
+!  AED_REAL :: dt = 3600. ! just for now, hard code it
    AED_REAL,PARAMETER :: secs_pr_day = 86400.
 !
 !-------------------------------------------------------------------------------
diff -NaBur -x .git fabm-git-20140610/src/models/aed/aed_totals.F90 fabm-git/src/models/aed/aed_totals.F90
--- fabm-git-20140610/src/models/aed/aed_totals.F90	2014-08-10 11:53:15.092258019 +0800
+++ fabm-git/src/models/aed/aed_totals.F90	2014-08-09 19:41:46.629463228 +0800
@@ -39,7 +39,8 @@
                                             id_totals_tss, id_totals_turbidity
       TYPE (type_state_variable_id),ALLOCATABLE :: id_dep_tn(:), id_dep_tp(:), id_dep_toc(:),  &
                                               id_dep_tss(:)
-      AED_REAL,ALLOCATABLE               :: turbidity(:)
+      AED_REAL,ALLOCATABLE :: tn_varscale(:), tp_varscale(:), toc_varscale(:), &
+                                             tss_varscale(:)
 
 
 !     Model parameters
@@ -74,37 +75,54 @@
    INTEGER :: status
 
    INTEGER           :: i, num_tn,num_tp,num_toc,num_tss
-   CHARACTER(len=40) :: tn(100), tp(100), toc(100), tss(100)
-   AED_REAL          :: turbidity(100)
+   CHARACTER(len=40) :: tn_vars(100), tp_vars(100), toc_vars(100), tss_vars(100)
+   AED_REAL          :: tn_varscale(100), tp_varscale(100)
+   AED_REAL          :: toc_varscale(100), tss_varscale(100)
 
-   NAMELIST /aed_totals/ tn,tp,toc,tss,turbidity
+   NAMELIST /aed_totals/ tn_vars,  tn_varscale,  tp_vars,  tp_varscale,  &
+                         toc_vars, toc_varscale, tss_vars, tss_varscale
 !
 !-------------------------------------------------------------------------------
 !BEGIN
-   tn = '' ; tp = '' ; toc = '' ; tss = '' ; turbidity = MISVAL
+   tn_vars = '' ;      tp_vars = '' ;      toc_vars = '' ;      tss_vars = ''
+   tn_varscale = 1.0 ; tp_varscale = 1.0 ; toc_varscale = 1.0 ; tss_varscale = 1.0
 
    ! Read the namelist
    read(namlst,nml=aed_totals,iostat=status)
    IF (status /= 0) STOP 'Error reading namelist aed_totals'
 
-   DO i=1,100 ; IF (tn(i)  .EQ. '' ) THEN ; num_tn  = i-1 ; EXIT ; ENDIF ; ENDDO
-   DO i=1,100 ; IF (tp(i)  .EQ. '' ) THEN ; num_tp  = i-1 ; EXIT ; ENDIF ; ENDDO
-   DO i=1,100 ; IF (toc(i) .EQ. '' ) THEN ; num_toc = i-1 ; EXIT ; ENDIF ; ENDDO
-   DO i=1,100 ; IF (tss(i) .EQ. '' ) THEN ; num_tss = i-1 ; EXIT ; ENDIF ; ENDDO
+   DO i=1,100 ; IF (tn_vars(i)  .EQ. '' ) THEN ; num_tn  = i-1 ; EXIT ; ENDIF ; ENDDO
+   DO i=1,100 ; IF (tp_vars(i)  .EQ. '' ) THEN ; num_tp  = i-1 ; EXIT ; ENDIF ; ENDDO
+   DO i=1,100 ; IF (toc_vars(i) .EQ. '' ) THEN ; num_toc = i-1 ; EXIT ; ENDIF ; ENDDO
+   DO i=1,100 ; IF (tss_vars(i) .EQ. '' ) THEN ; num_tss = i-1 ; EXIT ; ENDIF ; ENDDO
 
 !  print *,"totl tn = ",num_tn," num_tp = ",num_tp," num toc = ",num_toc," num_tss = ",num_tss
-   ALLOCATE(self%id_dep_tn(num_tn))
-   ALLOCATE(self%id_dep_tp(num_tp))
-   ALLOCATE(self%id_dep_toc(num_toc))
-   ALLOCATE(self%id_dep_tss(num_tss))
-   ALLOCATE(self%turbidity(num_tss))
+   ALLOCATE(self%id_dep_tn(num_tn))   ; ALLOCATE(self%tn_varscale(num_tn))
+   ALLOCATE(self%id_dep_tp(num_tp))   ; ALLOCATE(self%tp_varscale(num_tp))
+   ALLOCATE(self%id_dep_toc(num_toc)) ; ALLOCATE(self%toc_varscale(num_toc))
+   ALLOCATE(self%id_dep_tss(num_tss)) ; ALLOCATE(self%tss_varscale(num_tss))
 
    ! Register external state variable dependencies
-   DO i=1,num_tn  ; call self%register_state_dependency(self%id_dep_tn(i),tn(i))  ; ENDDO
-   DO i=1,num_tp  ; call self%register_state_dependency(self%id_dep_tp(i),tp(i))  ; ENDDO
-   DO i=1,num_toc ; call self%register_state_dependency(self%id_dep_toc(i),toc(i)) ; ENDDO
-   DO i=1,num_tss ; call self%register_state_dependency(self%id_dep_tss(i),tss(i)) ; ENDDO
-   self%turbidity = turbidity(1:num_tss)
+   DO i=1,num_tn
+      CALL self%register_state_dependency(self%id_dep_tn(i), tn_vars(i))
+      self%tn_varscale(i) =  tn_varscale(i)
+!     print*,'TN : ', TRIM(tn_vars(i)), ' * ', self%tn_varscale(i)
+   ENDDO
+   DO i=1,num_tp
+      CALL self%register_state_dependency(self%id_dep_tp(i), tp_vars(i))
+      self%tp_varscale(i) =  tp_varscale(i)
+!     print*,'TP : ', TRIM(tp_vars(i)), ' * ', self%tp_varscale(i)
+   ENDDO
+   DO i=1,num_toc
+      CALL self%register_state_dependency(self%id_dep_toc(i), toc_vars(i))
+      self%toc_varscale(i) = toc_varscale(i)
+!     print*,'TOC : ', TRIM(toc_vars(i)), ' * ', self%toc_varscale(i)
+   ENDDO
+   DO i=1,num_tss
+      CALL self%register_state_dependency(self%id_dep_tss(i), tss_vars(i))
+      self%tss_varscale(i) = tss_varscale(i)
+!     print*,'TSS : ', TRIM(tss_vars(i)), ' * ', self%tss_varscale(i)
+   ENDDO
 
    ! Register diagnostic variables
    CALL self%register_diagnostic_variable(self%id_totals_tn,'tn',               &
@@ -146,17 +164,17 @@
    ! Retrieve current (local) state variable values.
    tot = 0.
    count = ubound(self%id_dep_tn,1)
-   DO i=1,count ; _GET_(self%id_dep_tn(i),val) ; tot = tot + val ; ENDDO
+   DO i=1,count ; _GET_(self%id_dep_tn(i),val); tot = tot + (val*self%tn_varscale(i)) ; ENDDO
    _SET_DIAGNOSTIC_(self%id_totals_tn, tot)
 
    tot = 0.
    count = ubound(self%id_dep_tp,1)
-   DO i=1,count ; _GET_(self%id_dep_tp(i),val) ; tot = tot + val ; ENDDO
+   DO i=1,count ; _GET_(self%id_dep_tp(i),val); tot = tot + (val*self%tp_varscale(i)) ; ENDDO
    _SET_DIAGNOSTIC_(self%id_totals_tp, tot)
 
    tot = 0.
    count = ubound(self%id_dep_toc,1)
-   DO i=1,count ; _GET_(self%id_dep_toc(i),val) ; tot = tot + val ; ENDDO
+   DO i=1,count ; _GET_(self%id_dep_toc(i),val); tot = tot + (val*self%toc_varscale(i)) ; ENDDO
    _SET_DIAGNOSTIC_(self%id_totals_toc, tot)
 
    tot = 0.
@@ -165,7 +183,7 @@
    DO i=1,count
       _GET_(self%id_dep_tss(i),val)
       tot = tot + val
-      tot2 = tot2 + val*(self%turbidity(i))
+      tot2 = tot2 + val*(self%tss_varscale(i))
    ENDDO
 
    _SET_DIAGNOSTIC_(self%id_totals_tss, tot)
diff -NaBur -x .git fabm-git-20140610/src/models/aed/aed_tracer.F90 fabm-git/src/models/aed/aed_tracer.F90
--- fabm-git-20140610/src/models/aed/aed_tracer.F90	2014-08-10 11:53:15.092258019 +0800
+++ fabm-git/src/models/aed/aed_tracer.F90	2014-08-10 09:32:24.506075104 +0800
@@ -36,7 +36,9 @@
    TYPE,extends(type_base_model) :: aed_type_tracer
 !     Variable identifiers
       TYPE (type_state_variable_id),ALLOCATABLE :: id_ss(:)
+      TYPE (type_state_variable_id)             :: id_retain
       TYPE (type_dependency_id)                 :: id_temp
+      LOGICAL                                   :: retention_time
 
 !     Model parameters
       AED_REAL,ALLOCATABLE :: decay(:),settling(:), Fsed(:)
@@ -44,7 +46,7 @@
       CONTAINS      ! Model Methods
         PROCEDURE :: initialize               => aed_init_tracer
         PROCEDURE :: do                       => aed_tracer_do
-        PROCEDURE :: do_ppdd                  => aed_tracer_do_ppdd
+!       PROCEDURE :: do_ppdd                  => aed_tracer_do_ppdd
         PROCEDURE :: do_benthos               => aed_tracer_do_benthos
    END TYPE
 
@@ -74,10 +76,11 @@
    AED_REAL :: Fsed(100)
    AED_REAL :: trace_initial = zero_
    INTEGER  :: i
+   LOGICAL  :: retention_time = .FALSE.
    CHARACTER(4) :: trac_name
 
    AED_REAL,PARAMETER :: secs_pr_day = 86400.
-   NAMELIST /aed_tracer/ num_tracers,decay,settling,Fsed
+   NAMELIST /aed_tracer/ num_tracers,decay,settling,Fsed,retention_time
 !
 !-------------------------------------------------------------------------------
 !BEGIN
@@ -87,10 +90,12 @@
 
    ! Store parameter values in our own derived type
 
-   ALLOCATE(self%id_ss(num_tracers))
-   ALLOCATE(self%decay(num_tracers))    ; self%decay(1:num_tracers)    = decay(1:num_tracers)
-   ALLOCATE(self%settling(num_tracers)) ; self%settling(1:num_tracers) = settling(1:num_tracers)
-   ALLOCATE(self%Fsed(num_tracers))     ; self%Fsed(1:num_tracers)     = Fsed(1:num_tracers)
+   IF ( num_tracers > 0 ) THEN
+      ALLOCATE(self%id_ss(num_tracers))
+      ALLOCATE(self%decay(num_tracers))    ; self%decay(1:num_tracers)    = decay(1:num_tracers)
+      ALLOCATE(self%settling(num_tracers)) ; self%settling(1:num_tracers) = settling(1:num_tracers)
+      ALLOCATE(self%Fsed(num_tracers))     ; self%Fsed(1:num_tracers)     = Fsed(1:num_tracers)
+   ENDIF
 
    trac_name = 'ss0'
    ! Register state variables
@@ -99,6 +104,11 @@
       CALL self%register_state_variable(self%id_ss(i),TRIM(trac_name),'mmol/m**3','tracer', &
                                    trace_initial,minimum=zero_,no_river_dilution=.false.)
    ENDDO
+   self%retention_time = retention_time
+   IF (retention_time) THEN
+      CALL self%register_state_variable(self%id_retain, "ret",'sec','tracer', &
+                                   trace_initial,minimum=zero_)
+   ENDIF
 
    ! Register environmental dependencies
    CALL self%register_dependency(self%id_temp,standard_variables%temperature)
@@ -109,45 +119,26 @@
 !###############################################################################
 SUBROUTINE aed_tracer_do(self,_ARGUMENTS_DO_)
 !-------------------------------------------------------------------------------
-! Right hand sides of aed_tracer model
+! Right hand sides of aed_carbon model
 !-------------------------------------------------------------------------------
 !ARGUMENTS
    CLASS (aed_type_tracer),INTENT(in) :: self
    _DECLARE_ARGUMENTS_DO_
-!
-!LOCALS
-
-!-------------------------------------------------------------------------------
-!BEGIN
-   ! Enter spatial loops (if any)
-   _LOOP_BEGIN_
-
-   ! Leave spatial loops (if any)
-   _LOOP_END_
-END SUBROUTINE aed_tracer_do
-!+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-
 
-!###############################################################################
-SUBROUTINE aed_tracer_do_ppdd(self,_ARGUMENTS_DO_PPDD_)
-!-------------------------------------------------------------------------------
-! Right hand sides of tracer biogeochemical model exporting
-! production/destruction matrices
-!-------------------------------------------------------------------------------
-!ARGUMENTS
-   CLASS (aed_type_tracer),INTENT(in) :: self
-   _DECLARE_ARGUMENTS_DO_PPDD_
 !
-!LOCALS
-
 !-------------------------------------------------------------------------------
 !BEGIN
+   IF ( .NOT. self%retention_time ) RETURN
+
    ! Enter spatial loops (if any)
    _LOOP_BEGIN_
 
+   _SET_ODE_(self%id_retain, 1.0)
+
    ! Leave spatial loops (if any)
    _LOOP_END_
-END SUBROUTINE aed_tracer_do_ppdd
+
+END SUBROUTINE aed_tracer_do
 !+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 
 
@@ -174,6 +165,9 @@
 
 !-------------------------------------------------------------------------------
 !BEGIN
+
+   IF ( .NOT. ALLOCATED(self%id_ss) ) RETURN
+
    ! Enter spatial loops (if any)
    _HORIZONTAL_LOOP_BEGIN_
 
diff -NaBur -x .git fabm-git-20140610/testcases/fabm-aed.nml fabm-git/testcases/fabm-aed.nml
--- fabm-git-20140610/testcases/fabm-aed.nml	2014-06-10 14:09:46.000000000 +0800
+++ fabm-git/testcases/fabm-aed.nml	2014-07-06 08:14:26.669277371 +0800
@@ -153,7 +153,7 @@
    theta_sed_dic = 1.08
    Fsed_dic_variable = 'aed_sedflux_Fsed_dic'
    pH_initial = 7.5
-   atmco2 = 370e-6
+   atmco2 = 390
    ionic = 0.1
    !-- CH4 --
    ch4_initial = 27.6
@@ -549,20 +549,28 @@
 !  turbidity = !,  <vector same length as TSS names>
 !-------------------------------------------------------------------------------
 &aed_totals
-   TN =  'aed_nitrogen_nit',
-         'aed_nitrogen_amm',
-         'aed_organic_matter_don',
-         'aed_organic_matter_don',
-         'aed_phytoplankton_green_IN'
-   TP =  'aed_phosphorus_frp',
-         'aed_phosphorus_frp_ads',
-         'aed_organic_matter_dop',
-         'aed_organic_matter_dop',
-         'aed_phytoplankton_green_IP'
-   TOC = 'aed_organic_matter_doc',
-         'aed_organic_matter_poc',
-         'aed_phytoplankton_green'
-   TSS = 'aed_tracer_ss1',
-         'aed_phytoplankton_green' !, .... 
-   turbidity = 0.1,0.1            !,  <vector same length as TSS names>
+
+   TN_vars =  'aed_nitrogen_nit',
+              'aed_nitrogen_amm',
+              'aed_organic_matter_don',
+              'aed_organic_matter_pon',
+              'aed_phytoplankton_green',
+              'aed_phytoplankton_crypto'
+   TN_varscale = 1.0, 1.0, 1.0, 1.0, 0.15, 0.15
+   TP_vars =  'aed_phosphorus_frp',
+              'aed_phosphorus_frp_ads',
+              'aed_organic_matter_dop',
+              'aed_organic_matter_pop',
+              'aed_phytoplankton_green',
+              'aed_phytoplankton_crypto'
+   TP_varscale = 1.0, 1.0, 1.0, 1.0, 0.01, 0.01
+   TOC_vars = 'aed_organic_matter_doc',
+              'aed_organic_matter_poc',
+              'aed_phytoplankton_green',
+              'aed_phytoplankton_crypto'
+   TOC_varscale = 1.0, 1.0, 1.0, 1.0
+!  TSS_vars = 'aed_phytoplankton_green'
+   TSS_vars = 'aed_tracer_ss1',
+              'aed_phytoplankton_green' !, ....
+!  TSS_varscale = 0.1,0.1,0.,0.1            !,  <vector same length as TSS names>
 /
